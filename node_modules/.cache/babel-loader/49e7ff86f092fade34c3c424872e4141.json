{"ast":null,"code":"var _jsxFileName = \"/Users/emeliesabel/Desktop/hyper-island/PROJECTS/random-advice/random-advice/src/advice-component.js\";\nimport React, { useState } from \"react\";\n\nfunction AdviceComponent() {\n  function getAdvice() {\n    const [advice, onChangeAdvice] = useState();\n    React.useEffect(() => {\n      if (advice) {\n        return;\n      }\n\n      fetch(\"https://api.adviceslip.com/advice\") // fetching the data\n      .then(res => res.json()) // turn response into JSON\n      .then(data => {\n        const randomAdvice = data.slip.advice; // declaring var to store the specific data we want. in this case - advice from API\n\n        onChangeAdvice(randomAdvice); // onChange tells the computer to update advice from the const outside the useEffect. and inside onChange tells what to update advice with.\n      }); // what data and what within the data to update. in this ex its ADVICE from the const, outside the useEffect\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, advice), React.createElement(\"button\", {\n    onClick: getAdvice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"refresh advice\"));\n}\n\nexport default AdviceComponent;","map":{"version":3,"sources":["/Users/emeliesabel/Desktop/hyper-island/PROJECTS/random-advice/random-advice/src/advice-component.js"],"names":["React","useState","AdviceComponent","getAdvice","advice","onChangeAdvice","useEffect","fetch","then","res","json","data","randomAdvice","slip"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,eAAT,GAA2B;AACvB,WAASC,SAAT,GAAqB;AACvB,UAAM,CAACC,MAAD,EAASC,cAAT,IAA2BJ,QAAQ,EAAzC;AACAD,IAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,UAAIF,MAAJ,EAAY;AACV;AACD;;AAEDG,MAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2C;AAA3C,OACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAC2B;AAD3B,OAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,cAAMC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUT,MAA/B,CADY,CAC2B;;AAEvCC,QAAAA,cAAc,CAACO,YAAD,CAAd,CAHY,CAGkB;AAC/B,OANH,EALoB,CAWd;AACP,KAZD;AAaD;;AACC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMR,MAAN,CADF,EAEE;AAAQ,IAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF;AAMD;;AAED,eAAeD,eAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction AdviceComponent() { \n    function getAdvice() {\n  const [advice, onChangeAdvice] = useState();\n  React.useEffect(() => {\n    if (advice) {\n      return;\n    }\n\n    fetch(\"https://api.adviceslip.com/advice\") // fetching the data\n      .then(res => res.json()) // turn response into JSON\n      .then(data => {\n        const randomAdvice = data.slip.advice; // declaring var to store the specific data we want. in this case - advice from API\n\n        onChangeAdvice(randomAdvice); // onChange tells the computer to update advice from the const outside the useEffect. and inside onChange tells what to update advice with.\n      }); // what data and what within the data to update. in this ex its ADVICE from the const, outside the useEffect\n  });\n}\n  return (\n    <div>\n      <div>{advice}</div>\n      <button onClick={getAdvice}>refresh advice</button>\n    </div>\n  );\n}\n\nexport default AdviceComponent;\n"]},"metadata":{},"sourceType":"module"}