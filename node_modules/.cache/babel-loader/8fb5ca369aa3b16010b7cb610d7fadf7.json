{"ast":null,"code":"var _jsxFileName = \"/Users/emeliesabel/Desktop/hyper-island/PROJECTS/random-advice/random-advice/src/advice-component.js\";\nimport React, { useState } from \"react\";\n\nfunction AdviceComponent() {\n  const [advice, onChangeAdvice] = useState();\n  React.useEffect(() => {\n    //   fetching the data\n    fetch(\"https://api.adviceslip.com/advice\") // turn response into JSON\n    .then(res => res.json()) // what data and what to update\n    .then(data => {\n      const randomAdvice = data.slip.advice;\n      onChangeAdvice(randomAdvice);\n    });\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, advice);\n}\n\nexport default AdviceComponent;","map":{"version":3,"sources":["/Users/emeliesabel/Desktop/hyper-island/PROJECTS/random-advice/random-advice/src/advice-component.js"],"names":["React","useState","AdviceComponent","advice","onChangeAdvice","useEffect","fetch","then","res","json","data","randomAdvice","slip"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,eAAT,GAA2B;AACzB,QAAM,CAACC,MAAD,EAASC,cAAT,IAA2BH,QAAQ,EAAzC;AACAD,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AACpB;AACAC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACA;AADA,KAEGC,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFf,EAGA;AAHA,KAIGF,IAJH,CAIQG,IAAI,IAAI;AACZ,YAAMC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUT,MAA/B;AACAC,MAAAA,cAAc,CAACO,YAAD,CAAd;AACD,KAPH;AAQD,GAVD;AAWA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMR,MAAN,CAAP;AACD;;AAED,eAAeD,eAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction AdviceComponent() {\n  const [advice, onChangeAdvice] = useState();\n  React.useEffect(() => {\n    //   fetching the data\n    fetch(\"https://api.adviceslip.com/advice\")\n    // turn response into JSON\n      .then(res => res.json())\n    // what data and what to update\n      .then(data => {\n        const randomAdvice = data.slip.advice;\n        onChangeAdvice(randomAdvice);\n      });\n  });\n  return <div>{advice}</div>;\n}\n\nexport default AdviceComponent;\n"]},"metadata":{},"sourceType":"module"}